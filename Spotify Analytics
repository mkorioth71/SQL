# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I used SQL to answer the following questions. 

#1. What are the top ten artists based on popularity?
SELECT artist_name, popularity
FROM Spotifydata
ORDER BY popularity DESC LIMIT 10;

#2. What is the average danceability and energy rate by artist?
SELECT artist_name, ROUND(AVG(danceability),2) Danceability, ROUND(AVG(energy),3) Energy
FROM Spotifydata
GROUP BY artist_name;

#3. Which songs have the highest and lowest danceability ratings?
SELECT track_name, artist_name, danceability
FROM Spotifydata
ORDER BY danceability ASC 
LIMIT 1;

SELECT track_name, artist_name, danceability
FROM Spotifydata
ORDER BY danceability DESC
LIMIT 1;

#4. What artists have at least 2 tracks with a popularity score of 90 or higher?
SELECT artist_name, COUNT(artist_name)
FROM Spotifydata
WHERE popularity >=90
GROUP BY artist_name
HAVING COUNT(artist_name)>=2
ORDER BY COUNT(artist_name) desc;

#5. What songs have a popularity of >= 90, danceability >= .75, and energy >=.75?
SELECT track_name, artist_name
FROM Spotifydata
WHERE popularity >= 80 
AND danceability >= .75
AND energy >=.75
ORDER BY popularity asc;

#6. Calculate the average popularity for artists in the table. Then, for every artist with an average popularity of 90 or above, show their name,
their average popularity, and label them as a “Top Star”.
WITH tempTable AS (
SELECT AVG(popularity) AS avg_popularity, artist_name
FROM Spotifydata
GROUP BY artist_name)

SELECT avg_popularity, artist_name, 'Top Star' as tag
FROM tempTable
WHERE avg_popularity >=90
ORDER BY avg_popularity desc;
